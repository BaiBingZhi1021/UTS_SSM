<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:c="http://www.springframework.org/schema/c"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:cache="http://www.springframework.org/schema/cache"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:jee="http://www.springframework.org/schema/jee"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:amq="http://activemq.apache.org/schema/core"
    xmlns:jms="http://www.springframework.org/schema/jms"
    xsi:schemaLocation="
       http://activemq.apache.org/schema/core
       http://activemq.apache.org/schema/core/activemq-core.xsd
	   http://www.springframework.org/schema/beans
	   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	   http://www.springframework.org/schema/aop
	   http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	   http://www.springframework.org/schema/cache
	   http://www.springframework.org/schema/cache/spring-cache.xsd
	   http://www.springframework.org/schema/tx
	   http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	   http://www.springframework.org/schema/context     
	   http://www.springframework.org/schema/context/spring-context-3.0.xsd
	   http://www.springframework.org/schema/jms   
	   http://www.springframework.org/schema/jms/spring-jms-3.0.xsd
	   http://www.springframework.org/schema/jee
	   http://www.springframework.org/schema/jee/spring-jee.xsd">
  	
  	<context:annotation-config />
  	<cache:annotation-driven />
  	<context:component-scan base-package="uts.service, uts.alerts"></context:component-scan>
  	<aop:aspectj-autoproxy />
  	<aop:config>
		<aop:advisor advice-ref="cacheAdvice"
			pointcut="execution(* uts.service.CurrencyService.*(..))"/>  		
  	</aop:config>
  	
  	<cache:advice id="cacheAdvice">
  		<cache:caching>
  			<cache:cacheable cache="currencyCache" method="listCurrency"/>
  		</cache:caching>
  	</cache:advice>
  	
  	<bean id="cacheManager" class="org.springframework.cache.concurrent.ConcurrentMapCacheManager"/>
  	<!-- JNDI -->
  	<!-- <jee:jndi-lookup id="dataSource" jndi-name="/jdbc/uts_ssm" resource-ref="true"/> -->
  	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
  		<property name="driverClassName">
  			<value>oracle.jdbc.driver.OracleDriver</value>
  		</property>
  		<property name="url">
  			<value>jdbc:oracle:thin:@10.2.3.211:1521:UTSDB</value>
  		</property>
  		<property name="username">
  			<value>HLBMY_UTS_DEV</value>
  		</property>
  		<property name="password">
  			<value>uts</value>
  		</property>
  	</bean>
  	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean">
  		<property name="typeAliasesPackage" value="uts.ui.pojo" />
  		<property name="dataSource" ref="dataSource" />
  		<property name="mapperLocations" value="classpath:uts/ui/mapping/*.xml"/>
  	</bean>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="uts.dao" />
	</bean>
	
	<!-- 配置ActiveMQ -->
	<!-- <bean id="connectionFactory"
		class="org.apache.activemq.spring.ActiveMQConnectionFactory" 
		p:brokerURL="tcp://localhost:61616"/> -->
		<!-- 声明ActiveMQ队列 -->
		<!-- <bean id="queue" 
		class="org.apache.activemq.command.ActiveMQQueue"
		c:_="customer.queue" /> -->
		<!-- 声明ActiveMQzhuti -->
		<!-- <bean id="topic"
		class="org.apache.activemq.command.ActiveMQTopic"
		c:_="customer.topic" /> -->
	<amq:connectionFactory id="connectionFactory" brokerURL="tcp://localhost:61616"/>
	<!-- 队列 -->
	<amq:queue id="customerQueue" physicalName="customer.alert.queue" />
	<!-- 主题 -->
	<amq:topic id="customerTopic" physicalName="customer.alert.topic" />
	<!-- 消息转换器 -->
	<bean id="messageConverter" class="org.springframework.jms.support.converter.SimpleMessageConverter"></bean>
	<bean id="jmsTemplate"
		class="org.springframework.jms.core.JmsTemplate"
		c:_-ref="connectionFactory"
		p:defaultDestination-ref="customerQueue"
		p:messageConverter-ref="messageConverter" />
	
	<bean id="customerHandler" class="uts.alerts.CustomerAlertHandler" />
	
	<jms:listener-container connection-factory="connectionFactory">
		<jms:listener destination="customer.alert.queue" ref="customerHandler" method="handleCustomerAlert"/>
	</jms:listener-container>
</beans>